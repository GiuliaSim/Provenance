# The inputs that influenced $d_{ij}$.
# Input: $d_{ij}$ - single element

import pymongo
import pandas as pd
import pprint

def get_why_prov(ents_id):
	# Get input entities from ents_id:
	input_entities = entities.find({'identifier':{'$in': ents_id}, 'attributes.instance':'-1'},{'identifier':1,'_id':0}).distinct('identifier')
	
	# Select intermediate entities:
	diff = lambda l1, l2: [x for x in l1 if x not in l2]
	ents_id = diff(ents_id, input_entities)

	# Find the activities that generated the intermediate entities:
	generated_act = relations.find({'prov:entity': {'$in':ents_id}, 'prov:relation_type':'wasGeneratedBy'},{'prov:activity':1,'_id':0}).distinct('prov:activity')

	if not generated_act:
		# Base case: entities is not generated by any activity
		return input_entities
	else:
		# Find the entities used by the activities:
		used_ent = relations.find({'prov:activity':{'$in':generated_act}, 'prov:relation_type':'used'},{'prov:entity':1,'_id':0}).distinct('prov:entity')

		return input_entities + get_why_prov(used_ent)
	
if __name__ == "__main__":

	# Connect with MongoClient on the default host and port:
	client = pymongo.MongoClient('localhost', 27017)

	# Getting a Database:
	db = client['german_prov']

	# Get entities and relations mongodb collection:
	entities = db.entities
	relations = db.relations

	# Element identifier $d_{ij}$:
	entity_id = 'entity:80a19bef-6fc4-4ce8-bac4-455afdf4abb0'

	# Get identifier list of input entities that influenced an element:
	input_entities = get_why_prov([entity_id])

	# Find mongodb documents from identifier list:
	#why_prov = entities.find({'identifier':{'$in':input_entities}})
	db.why_prov.drop()
	why_prov = entities.aggregate([{'$match':{'identifier':{'$in':input_entities}}}, {'$out':'why_prov'}])

	# Print description of input entities that influenced the element $d_{ij}$:
	#print(why_prov.explain())
	print('Result saved in why_prov collection.')

	# Close Mongodb connection:
	client.close()
